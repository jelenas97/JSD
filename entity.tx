EntityModel:
    entities+=Entity        // Each model has one or more entities.
    shared+=Shared
    pages+=Pages
;

Entity:
    'entity' name=ID ':'
        propertiesPart *= PropertyPart    // Each entity has zero or one!!! property part
        operationsPart *= OperationPart   // Each entity has zero or one operations part
;

PropertyPart:
    'properties:'
        properties += Property
;

Property:
    annotations *= Annotation
    name = ID '>' type = Type       // type is a reference to Type instance.
;                                   // There are two built-in simple types
                                    // registered on meta-model in entity_test.py


Type:
    type = [RefferenceType] | '[' entity=[RefferenceType] ']'
;

EntityList:
    '[' type = [RefferenceType] ']'
;

Annotation:
    '{' annotation = [AnnotationName] '}'
;

AnnotationName:
    'annotation' name = ID
;

// Type can be SimpleType or Entity
RefferenceType:
    SimpleType | Entity
;

SimpleType:
    'type' name = ID
;

// Operation part
OperationPart:
    'operations:'
        operations += Operation
;

Operation:
    name = ID '(' parameters *= Parameters ')' type = Type
;

Parameters:
    name=ID ':' type=[RefferenceType] ',' parameters+=Parameters | name=ID ':' type=[RefferenceType]
;

//Shared part

Shared:
    'shared[' entities=Entities  ']:'
        propertiesPart*=PropertyPart
        operationsPart*=SharedOperationsPart
;

SharedOperationsPart:
    'operations:'
        operations*=SimpleOperations
;

SimpleOperations:
    SAVE = 'save' | UPDATE = 'update' | DELETE = 'delete' | GET_BY_ID = 'getById' | GET_ALL = 'getAll'
;

Entities:
    entity=[Entity] ',' entities+=Entities | entity=[Entity]
;


//Pages part

Pages:
    'pages[' entities=Entities ']:'
        pagesTypePart*=PagesTypePart
;

PagesTypePart:
    VIEW = 'view' | ADD = 'add' | EDIT = 'edit'
;


// Special rule for comments. Comments start with //
Comment:
    /\/\/.*$/
;
